{"version":3,"sources":["../../../../app/components/login/UserValidationController.js"],"names":["UserValidationController","Settings","downloadSettings","ElementsListener","listenToEvents","document","getElementsByClassName","registrationController","checkUserInfo","cancelRegistration","event","preventDefault","loginObject","userValidationController","getLogInObject","loginField","value","passwordField","proceedSignInErrors","userValidationModel","openSessionForUser","errorCode","k","logInFields","length","classManager","removeClass","registrationView","addBorderToInvalidInput","addInvalidField","warnToFillBothFields","signInValidator","classList","add","innerHTML","inputGroups"],"mappings":";;;;;;IAAMA,wB;;;;;;;2CAUiB;AACfC,qBAASC,gBAAT;AACH;;;oDAE2B;AACxBC,6BAAiBC,cAAjB,CAAgC,OAAhC,EAAyCC,SAASC,sBAAT,CAAgC,gBAAhC,CAAzC,EAA4FC,uBAAuBC,aAAnH;AACAL,6BAAiBC,cAAjB,CAAgC,OAAhC,EAAyCC,SAASC,sBAAT,CAAgC,yBAAhC,CAAzC,EAAqGC,uBAAuBE,kBAA5H;AACH;;;0CAEiBC,K,EAAO;AACrBA,kBAAMC,cAAN;AACA,gBAAIC,cAAcC,yBAAyBC,cAA3C;AACA,gBAAIF,YAAYG,UAAZ,CAAuBC,KAAvB,IAAgC,EAAhC,IAAsCJ,YAAYK,aAAZ,CAA0BD,KAA1B,IAAmC,EAA7E,EAAiF;AAC7EH,yCAAyBK,mBAAzB,CAA6C,kBAA7C;AACH,aAFD,MAEO;AACHC,oCAAoBC,kBAApB;AACH;AACJ;;;4CAEmBC,S,EAAW;AAC3B,gBAAIT,cAAcC,yBAAyBC,cAA3C;AACA,iBAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAIV,YAAYW,WAAZ,CAAwBC,MAA5C,EAAoDF,GAApD,EAAyD;AACrDG,6BAAaC,WAAb,CAAyBd,YAAYW,WAAZ,CAAwBD,CAAxB,CAAzB,EAAqD,aAArD;AACH;AACDG,yBAAaC,WAAb,CAAyBd,YAAYK,aAArC,EAAoD,eAApD;AACAQ,yBAAaC,WAAb,CAAyBd,YAAYG,UAArC,EAAiD,eAAjD;;AAEA,gBAAIM,aAAa,qBAAjB,EAAwC;AACpCM,iCAAiBC,uBAAjB,CAAyC,iBAAzC,EAA4D,CAA5D;AACAD,iCAAiBE,eAAjB,CAAiCjB,YAAYK,aAA7C;AACH;AACD,gBAAII,aAAa,qBAAjB,EAAwC;AACpCM,iCAAiBC,uBAAjB,CAAyC,iBAAzC,EAA4D,CAA5D;AACAD,iCAAiBE,eAAjB,CAAiCjB,YAAYG,UAA7C;AACH;AACD,gBAAIM,aAAa,kBAAjB,EAAqC;AACjCR,yCAAyBiB,oBAAzB;AACH;AACJ;;;+CAEsB;AACnB,gBAAIC,kBAAkBlB,yBAAyBC,cAA/C;AACA,iBAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAIS,gBAAgBR,WAAhB,CAA4BC,MAAhD,EAAwDF,GAAxD,EAA6D;AACzDK,iCAAiBE,eAAjB,CAAiCE,gBAAgBhB,UAAjD,EAA6DgB,gBAAgBd,aAA7E;AACAc,gCAAgBR,WAAhB,CAA4BD,CAA5B,EAA+BU,SAA/B,CAAyCC,GAAzC,CAA6C,aAA7C;AACAF,gCAAgBR,WAAhB,CAA4BD,CAA5B,EAA+BY,SAA/B,GAA2C,qBAA3C;AACH;AACJ;;;4BAxDoB;AACjB,mBAAO;AACHnB,4BAAYV,SAASC,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,CADT;AAEHW,+BAAeZ,SAASC,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,CAFZ;AAGH6B,6BAAa9B,SAASC,sBAAT,CAAgC,cAAhC,CAHV;AAIHiB,6BAAalB,SAASC,sBAAT,CAAgC,iBAAhC;AAJV,aAAP;AAMH;;;;;;AAoDL,IAAIO,2BAA2B,IAAIb,wBAAJ,EAA/B","file":"UserValidationController-compiled.js","sourcesContent":["class UserValidationController {\r\n    get getLogInObject() {\r\n        return {\r\n            loginField: document.getElementsByClassName('for-username')[0],\r\n            passwordField: document.getElementsByClassName('for-password')[0],\r\n            inputGroups: document.getElementsByClassName('input-groups'),\r\n            logInFields: document.getElementsByClassName('fail-validation')\r\n        }\r\n    }\r\n\r\n    successfulSignIn() {\r\n        Settings.downloadSettings();\r\n    }\r\n\r\n    subscribeValidationEvents() {\r\n        ElementsListener.listenToEvents('click', document.getElementsByClassName('submit-sign-up'), registrationController.checkUserInfo);\r\n        ElementsListener.listenToEvents('click', document.getElementsByClassName('close-registration-form'), registrationController.cancelRegistration);\r\n    }\r\n\r\n    checkLoginAndPass(event) {\r\n        event.preventDefault();\r\n        let loginObject = userValidationController.getLogInObject;\r\n        if (loginObject.loginField.value == '' && loginObject.passwordField.value == '') {\r\n            userValidationController.proceedSignInErrors('fill-both-values');\r\n        } else {\r\n            userValidationModel.openSessionForUser();\r\n        }\r\n    }\r\n\r\n    proceedSignInErrors(errorCode) {\r\n        let loginObject = userValidationController.getLogInObject;\r\n        for (let k = 0; k < loginObject.logInFields.length; k++) {\r\n            classManager.removeClass(loginObject.logInFields[k], 'no-validate');\r\n        }\r\n        classManager.removeClass(loginObject.passwordField, 'invalid-field');\r\n        classManager.removeClass(loginObject.loginField, 'invalid-field');\r\n\r\n        if (errorCode == 'auth/wrong-password') {\r\n            registrationView.addBorderToInvalidInput('fail-validation', 1);\r\n            registrationView.addInvalidField(loginObject.passwordField);\r\n        }\r\n        if (errorCode == 'auth/user-not-found') {\r\n            registrationView.addBorderToInvalidInput('fail-validation', 0);\r\n            registrationView.addInvalidField(loginObject.loginField);\r\n        }\r\n        if (errorCode == 'fill-both-values') {\r\n            userValidationController.warnToFillBothFields();\r\n        }\r\n    }\r\n\r\n    warnToFillBothFields() {\r\n        let signInValidator = userValidationController.getLogInObject;\r\n        for (let k = 0; k < signInValidator.logInFields.length; k++) {\r\n            registrationView.addInvalidField(signInValidator.loginField, signInValidator.passwordField);\r\n            signInValidator.logInFields[k].classList.add('no-validate');\r\n            signInValidator.logInFields[k].innerHTML = 'Fill in both values';\r\n        }\r\n    }\r\n}\r\n\r\nlet userValidationController = new UserValidationController();"]}