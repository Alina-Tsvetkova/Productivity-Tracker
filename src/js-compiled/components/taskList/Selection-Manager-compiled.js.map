{"version":3,"sources":["../../../../app/components/taskList/Selection-Manager.js"],"names":["SelectionManager","elements","taskListElements","TaskList","getTaskListElements","taskHashes","document","querySelectorAll","pushHashesToDeleteSet","selectedSize","selectedTaskHashes","size","l","quantityOfSelectedTasks","length","style","display","innerHTML","taskDeletorObj","pushTaskToDelete","TaskNotification","createNotification","k","add","getAttribute","changeSelectedTaskImage","getElementsByClassName","task","classManager","removeClass","classList","removeHashesToDeselect","delete","changeDeselectedTaskImage"],"mappings":";;;;;;IAAMA,gB;;;;;;;kCACeC,Q,EAAU;AACvB,gBAAIC,mBAAmBC,SAASC,mBAAhC;AACA,gBAAIC,aAAaC,SAASC,gBAAT,CAA0BN,QAA1B,CAAjB;AACAD,6BAAiBQ,qBAAjB,CAAuCH,UAAvC;AACA,gBAAII,eAAeC,mBAAmBC,IAAtC;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIV,iBAAiBW,uBAAjB,CAAyCC,MAA7D,EAAqEF,GAArE,EAA0E;AACtEV,iCAAiBW,uBAAjB,CAAyCD,CAAzC,EAA4CG,KAA5C,CAAkDC,OAAlD,GAA4D,OAA5D;AACAd,iCAAiBW,uBAAjB,CAAyCD,CAAzC,EAA4CK,SAA5C,GAAwDR,YAAxD;AACH;AACDS,2BAAeC,gBAAf;AACAC,6BAAiBC,kBAAjB,CAAoC,eAApC;AACH;;;8CAE4BhB,U,EAAY;AACrC,iBAAK,IAAIiB,IAAI,CAAb,EAAgBA,IAAIjB,WAAWS,MAA/B,EAAuCQ,GAAvC,EAA4C;AACxCZ,mCAAmBa,GAAnB,CAAuBlB,WAAWiB,CAAX,EAAcE,YAAd,CAA2B,SAA3B,CAAvB;AACAxB,iCAAiByB,uBAAjB,CAAyCpB,WAAWiB,CAAX,EAAcI,sBAAd,CAAqC,WAArC,EAAkD,CAAlD,CAAzC;AACH;AACJ;;;gDAE8BC,I,EAAM;AACjCC,yBAAaC,WAAb,CAAyBF,IAAzB,EAA+B,iBAA/B;AACAA,iBAAKG,SAAL,CAAeP,GAAf,CAAmB,eAAnB;AACH;;;kDAEgCI,I,EAAM;AACnCC,yBAAaC,WAAb,CAAyBF,IAAzB,EAA+B,eAA/B;AACAC,yBAAaC,WAAb,CAAyBF,IAAzB,EAA+B,YAA/B;AACAA,iBAAKG,SAAL,CAAeP,GAAf,CAAmB,iBAAnB;AACH;;;iDAE+BtB,Q,EAAU;AACtC,gBAAIC,mBAAmBC,SAASC,mBAAhC;AACA,gBAAIC,aAAaC,SAASC,gBAAT,CAA0BN,QAA1B,CAAjB;AACAD,6BAAiB+B,sBAAjB,CAAwC1B,UAAxC;AACA,gBAAII,eAAeC,mBAAmBC,IAAtC;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIV,iBAAiBW,uBAAjB,CAAyCC,MAA7D,EAAqEF,GAArE,EAA0E;AACtEV,iCAAiBW,uBAAjB,CAAyCD,CAAzC,EAA4CG,KAA5C,CAAkDC,OAAlD,GAA4D,MAA5D;AACA,oBAAId,iBAAiBW,uBAAjB,CAAyCD,CAAzC,EAA4CK,SAA5C,IAAyD,CAA7D,EAAgE;AAC5D;AACH;AACDf,iCAAiBW,uBAAjB,CAAyCD,CAAzC,EAA4CK,SAA5C,GAAwDR,YAAxD;AACH;AACJ;;;+CAE6BJ,U,EAAY;AACtC,iBAAK,IAAIiB,IAAI,CAAb,EAAgBA,IAAIjB,WAAWS,MAA/B,EAAuCQ,GAAvC,EAA4C;AACxCZ,mCAAmBsB,MAAnB,CAA0B3B,WAAWiB,CAAX,EAAcE,YAAd,CAA2B,SAA3B,CAA1B;AACAxB,iCAAiBiC,yBAAjB,CAA2C5B,WAAWiB,CAAX,EAAcI,sBAAd,CAAqC,WAArC,EAAkD,CAAlD,CAA3C;AACH;AACJ","file":"Selection-Manager-compiled.js","sourcesContent":["class SelectionManager {\r\n    static selectAll(elements) {\r\n        let taskListElements = TaskList.getTaskListElements;\r\n        let taskHashes = document.querySelectorAll(elements);\r\n        SelectionManager.pushHashesToDeleteSet(taskHashes);\r\n        let selectedSize = selectedTaskHashes.size;\r\n        for (let l = 0; l < taskListElements.quantityOfSelectedTasks.length; l++) {\r\n            taskListElements.quantityOfSelectedTasks[l].style.display = 'block';\r\n            taskListElements.quantityOfSelectedTasks[l].innerHTML = selectedSize;\r\n        }\r\n        taskDeletorObj.pushTaskToDelete();\r\n        TaskNotification.createNotification('.message-warn');\r\n    }\r\n\r\n    static pushHashesToDeleteSet(taskHashes) {\r\n        for (let k = 0; k < taskHashes.length; k++) {\r\n            selectedTaskHashes.add(taskHashes[k].getAttribute('taskkey'));\r\n            SelectionManager.changeSelectedTaskImage(taskHashes[k].getElementsByClassName('indicator')[0]);\r\n        }\r\n    }\r\n\r\n    static changeSelectedTaskImage(task) {\r\n        classManager.removeClass(task, 'canceled-delete');\r\n        task.classList.add('for-delete-bg');\r\n    }\r\n\r\n    static changeDeselectedTaskImage(task) {\r\n        classManager.removeClass(task, 'for-delete-bg');\r\n        classManager.removeClass(task, 'for-delete');\r\n        task.classList.add('canceled-delete');\r\n    }\r\n\r\n    static deselectAllSelectedTasks(elements) {\r\n        let taskListElements = TaskList.getTaskListElements;\r\n        let taskHashes = document.querySelectorAll(elements);\r\n        SelectionManager.removeHashesToDeselect(taskHashes);\r\n        let selectedSize = selectedTaskHashes.size;\r\n        for (let l = 0; l < taskListElements.quantityOfSelectedTasks.length; l++) {\r\n            taskListElements.quantityOfSelectedTasks[l].style.display = 'none';\r\n            if (taskListElements.quantityOfSelectedTasks[l].innerHTML == 0) {\r\n                return;\r\n            }\r\n            taskListElements.quantityOfSelectedTasks[l].innerHTML = selectedSize;\r\n        }\r\n    }\r\n\r\n    static removeHashesToDeselect(taskHashes) {\r\n        for (let k = 0; k < taskHashes.length; k++) {\r\n            selectedTaskHashes.delete(taskHashes[k].getAttribute('taskkey'));\r\n            SelectionManager.changeDeselectedTaskImage(taskHashes[k].getElementsByClassName('indicator')[0]);\r\n        }\r\n    }\r\n}"]}