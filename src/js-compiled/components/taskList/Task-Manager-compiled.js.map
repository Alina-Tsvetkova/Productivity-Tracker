{"version":3,"sources":["../../../../app/components/taskList/Task-Manager.js"],"names":["TaskManager","modalWindowElements","modalWindowController","getModalWindowElements","postData","title","titleInput","value","description","descriptionInput","category","categoryRadioBtn","innerHTML","deadline","deadlineInput","estimation","estimationCheckboxes","priority","priorityRadioBtn","colorIndicator","taskIsDone","timerIsOn","startOfTimer","timerIterations","dateOfFinish","dailyTask","allCategoriesNames","document","getElementsByClassName","allCategoriesValues","j","length","push","foundCategory","indexOf","taskElementController","addDefaultData","taskElementModel","sendSubmittedData","closeModalWindow","getElementById","TaskNotification","createNotification","checkIfALLTasksAreDone","index","editModalElements","productivityManager","editModalWindowElem","updates","titleField","descriptionField","checkedCategory","checkedPriority","checkedEstimation","editedToday","editedHash","getAttribute","sendEditedData","querySelector","querySelectorAll"],"mappings":"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","file":"Task-Manager-compiled.js","sourcesContent":["class TaskManager {\r\n\r\n    get editModalWindowElem() {\r\n        return {\r\n            titleField: document.getElementsByClassName('title-input')[0],\r\n            descriptionField: document.getElementsByClassName('description-input')[0],\r\n            checkedCategory: document.querySelector('input.category-input:checked'),\r\n            checkedPriority: document.querySelector('input[name=\"priority-level\"]:checked + label + label'),\r\n            deadlineInput: document.getElementsByClassName('deadline-input')[0],\r\n            checkedEstimation: document.querySelectorAll('.tomato-estim:checked'),\r\n            allCategoriesNames: document.getElementsByClassName('category-input'),\r\n        }\r\n    }\r\n\r\n\r\n    submitTask() {\r\n        let modalWindowElements = modalWindowController.getModalWindowElements;\r\n        let postData = {\r\n            title: modalWindowElements.titleInput.value,\r\n            description: modalWindowElements.descriptionInput.value,\r\n            category: modalWindowElements.categoryRadioBtn.innerHTML,\r\n            deadline: modalWindowElements.deadlineInput.value,\r\n            estimation: modalWindowElements.estimationCheckboxes,\r\n            priority: modalWindowElements.priorityRadioBtn.innerHTML,\r\n            colorIndicator: null,\r\n            taskIsDone: false,\r\n            timerIsOn: false,\r\n            startOfTimer: 0,\r\n            timerIterations: 0,\r\n            dateOfFinish: null,\r\n            dailyTask: false\r\n        };\r\n\r\n        let allCategoriesNames = document.getElementsByClassName('category-input');\r\n        let allCategoriesValues = [];\r\n        for (let j = 0; j < allCategoriesNames.length; j++) {\r\n            allCategoriesValues.push(allCategoriesNames[j].value);\r\n        }\r\n        let foundCategory = allCategoriesValues.indexOf(postData.category);\r\n\r\n        postData.colorIndicator = foundCategory - 1;\r\n\r\n        if (postData.deadline == '') {\r\n            postData.deadline = taskElementController.addDefaultData();\r\n        }\r\n\r\n        taskElementModel.sendSubmittedData(postData);\r\n        modalWindowController.closeModalWindow(document.getElementById('modal-window-elem'));\r\n\r\n        TaskNotification.createNotification('.message-success');\r\n        taskElementController.checkIfALLTasksAreDone();\r\n    }\r\n\r\n\r\n    saveEditedTask(index) {\r\n        let editModalElements = productivityManager.editModalWindowElem;\r\n        let updates = {};\r\n        updates.title = editModalElements.titleField.value;\r\n        updates.description = editModalElements.descriptionField.value;\r\n        updates.category = editModalElements.checkedCategory.value;\r\n        updates.priority = editModalElements.checkedPriority.innerHTML;\r\n        updates.deadline = editModalElements.deadlineInput.value;\r\n        updates.estimation = editModalElements.checkedEstimation.length;\r\n\r\n        if (editModalElements.deadlineInput.value == '') {\r\n            let editedToday = taskElementController.addDefaultData();\r\n            updates.deadline = editedToday;\r\n        }\r\n\r\n        let allCategoriesValues = [];\r\n        for (let j = 0; j < editModalElements.allCategoriesNames.length; j++) {\r\n            allCategoriesValues.push(editModalElements.allCategoriesNames[j].value);\r\n        }\r\n        updates.colorIndicator = allCategoriesValues.indexOf(updates.category) - 1;\r\n        let editedHash = document.getElementsByClassName('task')[index].getAttribute('taskKey');\r\n        taskElementModel.sendEditedData(updates, editedHash);\r\n        modalWindowController.closeModalWindow(document.getElementById('modal-window-elem-edit'));\r\n    }\r\n}\r\n\r\nlet productivityManager = new TaskManager();"]}