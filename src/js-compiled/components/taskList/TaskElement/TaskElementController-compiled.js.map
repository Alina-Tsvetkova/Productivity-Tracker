{"version":3,"sources":["../../../../../app/components/taskList/TaskElement/TaskElementController.js"],"names":["TaskElementController","taskElementView","clearContainers","firebase","database","ref","RegistrationModel","getUserDataLocally","on","data","tasksTabs","document","getElementById","addTaskSection","$","val","classManager","removeClass","classList","add","taskElementModel","filterTasks","e","querySelectorAll","length","getElementsByClassName","splitedArray","allMonths","todayMonth","k","deadline","tasksMissedDeadlines","split","thisDate","Date","setDate","getDate","deadlineDate","parseInt","notificationCounter","NotificationManager","showNotification","taskElements","taskElementController","taskElementsObj","ElementsListener","listenToEvents","editTaskBtn","TaskList","getIndexOfTask","moveTaskBtn","getIndexOfMovableTasks","indicator","taskDeletorObj","pushTaskToDelete","removeTaskBtn","givePossibilityToDelete","priorityIndicator","event","taskKey","target","parentNode","getAttribute","contains","stopImmediatePropagation","TaskNotification","createNotification","initialTimerView","showTimer","elem","style","color","getMonth","getFullYear","key","sendTodayTask","priorityFilters","i","filterDataBase","task","taskTitle","monthDeadlineElem","descriptionContent","priorityIndicatorSpan","dayDeadline"],"mappings":"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","file":"TaskElementController-compiled.js","sourcesContent":["class TaskElementController {\r\n    get taskElementsObj() {\r\n        return {\r\n            task: document.getElementsByClassName('task'),\r\n            taskTitle: document.getElementsByClassName('task-title'),\r\n            monthDeadlineElem: document.getElementsByClassName('monthDeadline'),\r\n            priorityIndicator: document.getElementsByClassName('priority-indicator'),\r\n            descriptionContent: document.getElementsByClassName('description-content'),\r\n            priorityIndicatorSpan: document.querySelectorAll('.priority-indicator span'),\r\n            editTaskBtn: document.getElementsByClassName('edit'),\r\n            moveTaskBtn: document.getElementsByClassName('move-task'),\r\n            indicator: document.getElementsByClassName('indicator'),\r\n            removeTaskBtn: document.getElementsByClassName('remove-btn-icon'),\r\n            dayDeadline: document.getElementsByClassName('dayDeadline')\r\n        }\r\n    }\r\n\r\n    checkIfTaskListEmpty() {\r\n        taskElementView.clearContainers();\r\n        try {\r\n            firebase.database().ref('users/' + RegistrationModel.getUserDataLocally() + '/tasks').on('value', function (data) {\r\n                let tasksTabs = document.getElementById('tasksTabs');\r\n                let addTaskSection = $('.add-task-sect')[0];\r\n                if (data.val() == null) {\r\n                    classManager.removeClass(addTaskSection, 'non-visible-elem');\r\n                    tasksTabs.classList.add('non-visible-elem');\r\n                }\r\n                else {\r\n                    classManager.removeClass(tasksTabs, 'non-visible-elem');\r\n                    taskElementModel.filterTasks(\"taskIsDone\", false);\r\n                    taskElementModel.filterTasks(\"taskIsDone\", true);\r\n                    try {\r\n                        addTaskSection.classList.add('non-visible-elem');\r\n                    }\r\n                    catch (e) {\r\n                        return false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        catch (e) {\r\n            return 'nothing to remove';\r\n        }\r\n    }\r\n\r\n    checkIfALLTasksAreDone() {\r\n        try {\r\n            if (document.querySelectorAll('#globalTasks .task, #daily-tasks .task').length == 0) {\r\n                classManager.removeClass(document.getElementsByClassName('done-tasks-sect')[0], 'non-visible-elem');\r\n                document.getElementsByClassName('tasks-intro')[0].classList.add('non-visible-elem');\r\n            }\r\n\r\n            else {\r\n                document.getElementsByClassName('done-tasks-sect')[0].classList.add('non-visible-elem');\r\n                classManager.removeClass(document.getElementsByClassName('tasks-intro')[0], 'non-visible-elem');\r\n            }\r\n        } catch (e) {\r\n            return \"element is removed\";\r\n        }\r\n\r\n    }\r\n\r\n    generateWordMonth(splitedArray) {\r\n        let allMonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n        let todayMonth = splitedArray[1];\r\n        for (let k = 0; k < allMonths.length; k++) {\r\n            if (todayMonth == k) {\r\n                todayMonth = allMonths[k - 1];\r\n            }\r\n        }\r\n        return todayMonth;\r\n    }\r\n\r\n    notifyAboutMissedDeadlines(deadline) {\r\n        let tasksMissedDeadlines = deadline.split('.');\r\n        let thisDate = new Date();\r\n        thisDate.setDate(thisDate.getDate());\r\n        let deadlineDate = new Date(tasksMissedDeadlines[2], tasksMissedDeadlines[1] - 1, parseInt(tasksMissedDeadlines[0]) + 1);\r\n        if (deadlineDate < thisDate) {\r\n            if (notificationCounter <= 0) {\r\n                NotificationManager.showNotification(\"You have missed Deadline!\", 'assets/img/tomato-failed.png', 'Productivity Tracker');\r\n                notificationCounter++;\r\n            }\r\n        }\r\n    }\r\n\r\n    subscribeTaskEvents() {\r\n        let taskElements = taskElementController.taskElementsObj;\r\n        ElementsListener.listenToEvents('click', taskElements.editTaskBtn, TaskList.getIndexOfTask);\r\n        ElementsListener.listenToEvents('click', taskElements.moveTaskBtn, TaskList.getIndexOfMovableTasks);\r\n        ElementsListener.listenToEvents('click', taskElements.indicator, taskDeletorObj.pushTaskToDelete);\r\n        ElementsListener.listenToEvents('click', taskElements.removeTaskBtn, taskDeletorObj.givePossibilityToDelete);\r\n        ElementsListener.listenToEvents('click', taskElements.priorityIndicator, function (event) {\r\n            let taskKey = event.target.parentNode.parentNode.getAttribute('taskkey');\r\n            if (event.target.parentNode.parentNode.classList.contains('done-task')) {\r\n                event.stopImmediatePropagation();\r\n                TaskNotification.createNotification('.message-error');\r\n                return false;\r\n            }\r\n            initialTimerView.showTimer(taskKey);\r\n        });\r\n    }\r\n\r\n    addActiveClassSelector(elem) {\r\n        for (let k = 0; k < document.querySelectorAll('.opportunity-select button').length; k++) {\r\n            document.querySelectorAll('.opportunity-select button')[k].style.color = '#8da5b8';\r\n        }\r\n        elem.style.color = 'white';\r\n    }\r\n\r\n    addDefaultData() {\r\n        return new Date().getDate() + '.' + parseInt(new Date().getMonth() + 1) + '.' + new Date().getFullYear();\r\n    };\r\n\r\n    moveTaskToDaily(key) {\r\n        taskElementModel.sendTodayTask(key);\r\n    }\r\n\r\n    filterTasksToPriority() {\r\n        taskElementView.clearContainers();\r\n        let priorityFilters = document.querySelectorAll('.priority-list button');\r\n\r\n        for (let i = 0; i < priorityFilters.length; i++) {\r\n            classManager.removeClass(priorityFilters[i], 'active-elem-white');\r\n        }\r\n        event.target.classList.add('active-elem-white');\r\n        taskElementModel.filterDataBase();\r\n    }\r\n}\r\n\r\nlet taskElementController = new TaskElementController();"]}