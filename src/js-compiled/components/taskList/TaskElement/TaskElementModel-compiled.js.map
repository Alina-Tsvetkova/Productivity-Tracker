{"version":3,"sources":["../../../../../app/components/taskList/TaskElement/TaskElementModel.js"],"names":["TaskElementModel","field","value","taskData","firebase","database","ref","RegistrationModel","getUserDataLocally","limitToLast","orderByChild","equalTo","once","snapshot","forEach","childSnapshot","childData","val","key","docTask","taskElementView","downloadTaskComponent","fillTaskWithInformation","Binder","downloadPlugins","postData","push","taskElementController","checkIfTaskListEmpty","updates","editedHash","update","today","addDefaultData","deadline","on","child","event","target","innerHTML","priority","taskElementModel"],"mappings":";;;;;;IAAMA,gB;;;;;;;oCACUC,K,EAAOC,K,EAAO;AACtB,gBAAIC,WAAWC,SAASC,QAAT,GAAoBC,GAApB,CAAwB,WAAWC,kBAAkBC,kBAAlB,EAAX,GAAoD,QAA5E,EAAsFC,WAAtF,CAAkG,CAAlG,CAAf;AACAN,qBAASO,YAAT,CAAsBT,KAAtB,EAA6BU,OAA7B,CAAqCT,KAArC,EAA4CU,IAA5C,CAAiD,OAAjD,EAA0D,UAAUC,QAAV,EAAoB;AAC1EA,yBAASC,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACtC,wBAAIC,YAAYH,SAASI,GAAT,EAAhB;AACA,wBAAIC,MAAMH,cAAcG,GAAxB;AACA,wBAAIC,UAAUC,gBAAgBC,qBAAhB,EAAd;AACAD,oCAAgBE,uBAAhB,CAAwCH,OAAxC,EAAiDH,SAAjD,EAA4DE,GAA5D;AACH,iBALD;AAMH,aAPD;AAQAK,mBAAOC,eAAP;AACH;;;0CAEiBC,Q,EAAU;AACxBrB,qBAASC,QAAT,GAAoBC,GAApB,CAAwB,WAAWC,kBAAkBC,kBAAlB,EAAX,GAAoD,QAA5E,EAAsFkB,IAAtF,CAA2FD,QAA3F;AACAE,kCAAsBC,oBAAtB;AACH;;;uCAEcC,O,EAASC,U,EAAY;AAChC1B,qBAASC,QAAT,GAAoBC,GAApB,CAAwB,WAAWC,kBAAkBC,kBAAlB,EAAX,GAAoD,SAApD,GAAgEsB,UAAxF,EAAoGC,MAApG,CAA2GF,OAA3G;AACAF,kCAAsBC,oBAAtB;AACH;;;sCAEaV,G,EAAK;AACf,gBAAIc,QAAQL,sBAAsBM,cAAtB,EAAZ;AACA7B,qBAASC,QAAT,GAAoBC,GAApB,CAAwB,WAAWC,kBAAkBC,kBAAlB,EAAX,GAAoD,SAApD,GAAgEU,GAAxF,EAA6Fa,MAA7F,CAAoG;AAChGG,0BAAUF;AADsF,aAApG;AAGAL,kCAAsBC,oBAAtB;AACH;;;yCAEgB;AACb,gBAAIzB,WAAWC,SAASC,QAAT,GAAoBC,GAApB,CAAwB,WAAWC,kBAAkBC,kBAAlB,EAAX,GAAoD,QAA5E,CAAf;AACAL,qBAASgC,EAAT,CAAY,OAAZ,EAAqB,UAAUtB,QAAV,EAAoB;AACrCA,yBAASC,OAAT,CAAiB,UAAUsB,KAAV,EAAiB;AAC9B,wBAAIlC,QAAQkC,MAAMnB,GAAN,EAAZ;;AAEA,wBAAIoB,MAAMC,MAAN,CAAaC,SAAb,IAA0BH,MAAMnB,GAAN,GAAYuB,QAA1C,EAAoD;AAChD,4BAAIrB,UAAUC,gBAAgBC,qBAAhB,EAAd;AACAD,wCAAgBE,uBAAhB,CAAwCH,OAAxC,EAAiDjB,KAAjD,EAAwDkC,MAAMlB,GAA9D,EAAmE,IAAnE;AACH,qBAHD,MAIK,IAAImB,MAAMC,MAAN,CAAaC,SAAb,IAA0B,KAA9B,EAAqC;AACtCZ,8CAAsBC,oBAAtB;AACH;AACJ,iBAVD;AAWH,aAZD;AAaH;;;;;;AAGL,IAAIa,mBAAmB,IAAIzC,gBAAJ,EAAvB","file":"TaskElementModel-compiled.js","sourcesContent":["class TaskElementModel {\r\n    filterTasks(field, value) {\r\n        let taskData = firebase.database().ref('users/' + RegistrationModel.getUserDataLocally() + '/tasks').limitToLast(5);\r\n        taskData.orderByChild(field).equalTo(value).once(\"value\", function (snapshot) {\r\n            snapshot.forEach(function (childSnapshot) {\r\n                let childData = snapshot.val();\r\n                let key = childSnapshot.key;\r\n                let docTask = taskElementView.downloadTaskComponent();\r\n                taskElementView.fillTaskWithInformation(docTask, childData, key);\r\n            });\r\n        });\r\n        Binder.downloadPlugins();\r\n    }\r\n\r\n    sendSubmittedData(postData) {\r\n        firebase.database().ref('users/' + RegistrationModel.getUserDataLocally() + '/tasks').push(postData);\r\n        taskElementController.checkIfTaskListEmpty();\r\n    }\r\n\r\n    sendEditedData(updates, editedHash) {\r\n        firebase.database().ref('users/' + RegistrationModel.getUserDataLocally() + '/tasks/' + editedHash).update(updates);\r\n        taskElementController.checkIfTaskListEmpty();\r\n    }\r\n\r\n    sendTodayTask(key) {\r\n        let today = taskElementController.addDefaultData();\r\n        firebase.database().ref('users/' + RegistrationModel.getUserDataLocally() + '/tasks/' + key).update({\r\n            deadline: today\r\n        });\r\n        taskElementController.checkIfTaskListEmpty();\r\n    }\r\n\r\n    filterDataBase() {\r\n        let taskData = firebase.database().ref('users/' + RegistrationModel.getUserDataLocally() + '/tasks');\r\n        taskData.on('value', function (snapshot) {\r\n            snapshot.forEach(function (child) {\r\n                let value = child.val();\r\n\r\n                if (event.target.innerHTML == child.val().priority) {\r\n                    let docTask = taskElementView.downloadTaskComponent();\r\n                    taskElementView.fillTaskWithInformation(docTask, value, child.key, true);\r\n                }\r\n                else if (event.target.innerHTML == 'All') {\r\n                    taskElementController.checkIfTaskListEmpty();\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nlet taskElementModel = new TaskElementModel();"]}