{"version":3,"sources":["../../../../../app/components/timer/WorkPhase/WorkPhaseController.js"],"names":["WorkPhaseController","timerElements","Timer","initializeTimerElements","workPhaseView","downloadWorkPhaseComponent","workPhaseController","subscribeWorkPhaseEvents","timer","addAnimationToTimerComponents","addRunningAnimation","timerRotator","timerInvader","timerDivider","borderColorIndex","receiveColorIndex","timerKey","addBorder","addPausedAnimation","pomodoroAttempts","breakTimerAttempts","classList","add","timerAttempts","finishPhaseController","completeTask","clearTimerElements","timerContainer","breakTimer","breakPhaseView","startBreak","e","failTask","addStartPomodoraBtn","removeButtons","ElementsListener","listenToEvents","finishPomodoraButton","finishPomodora","failPomodoraButton","failPomodora","elem1","elem2","elem3","workTimeDuration","j","arguments","length","style","animationDuration","timerMinutes","innerHTML"],"mappings":";;;;;;IAAMA,mB;;;;;;;wCACe;AACb,gBAAIC,gBAAgBC,MAAMC,uBAA1B;AACAC,0BAAcC,0BAAd,CAAyCJ,aAAzC;AACAK,gCAAoBC,wBAApB,CAA6CN,aAA7C;AACAO,kBAAMC,6BAAN;AACAD,kBAAME,mBAAN,CAA0BT,cAAcU,YAAxC,EAAsDV,cAAcW,YAApE,EAAkFX,cAAcY,YAAhG;AACA,gBAAIC,mBAAmBN,MAAMO,iBAAN,CAAwBC,QAAxB,CAAvB;AACAZ,0BAAca,SAAd,CAAwBhB,aAAxB,EAAuCa,gBAAvC;AACH;;;yCAGgB;AAAE;AACf,gBAAIb,gBAAgBC,MAAMC,uBAA1B;AACAK,kBAAMU,kBAAN,CAAyBjB,cAAcU,YAAvC,EAAqDV,cAAcW,YAAnE,EAAiFX,cAAcY,YAA/F;AACAZ,0BAAckB,gBAAd,CAA+BC,kBAA/B,EAAmDC,SAAnD,CAA6DC,GAA7D,CAAiE,iBAAjE;AACAF;AACA,gBAAIA,uBAAuBG,aAA3B,EAA0C;AACtCC,sCAAsBC,YAAtB;AACAvB,sBAAMwB,kBAAN,CAAyBzB,cAAc0B,cAAvC,EAAuD1B,cAAc2B,UAArE;AACH,aAHD,MAIK;AACD,oBAAI;AACAC,mCAAeC,UAAf;AACH,iBAFD,CAEE,OAAOC,CAAP,EAAU;AACR,2BAAO,qCAAP;AACH;AAEJ;AACJ;;;uCAEc;AACX,gBAAI9B,gBAAgBC,MAAMC,uBAA1B;AACAK,kBAAMU,kBAAN,CAAyBjB,cAAcU,YAAvC,EAAqDV,cAAcW,YAAnE,EAAiFX,cAAcY,YAA/F;AACAZ,0BAAckB,gBAAd,CAA+BC,kBAA/B,EAAmDC,SAAnD,CAA6DC,GAA7D,CAAiE,eAAjE;AACAF;;AAEA,gBAAIA,uBAAuBG,aAA3B,EAA0C;AACtCC,sCAAsBQ,QAAtB;AACH;AACDR,kCAAsBS,mBAAtB;;AAEA,gBAAI;AACA7B,8BAAc8B,aAAd,CAA4BjC,aAA5B;AACH,aAFD,CAEE,OAAO8B,CAAP,EAAU;AACR,uBAAO,4BAAP;AACH;AAEJ;;;iDAEwB9B,a,EAAe;AACpCkC,6BAAiBC,cAAjB,CAAgC,OAAhC,EAAyCnC,cAAcoC,oBAAvD,EAA6E/B,oBAAoBgC,cAAjG;AACAH,6BAAiBC,cAAjB,CAAgC,OAAhC,EAAyCnC,cAAcsC,kBAAvD,EAA2EjC,oBAAoBkC,YAA/F;AACH;;;iDAGwBC,K,EAAOC,K,EAAOC,K,EAAOC,gB,EAAkB;AAC5D,gBAAI3C,gBAAgBC,MAAMC,uBAA1B;AACA,gBAAI;AACA,qBAAK,IAAI0C,IAAI,CAAb,EAAgBA,IAAIC,UAAUC,MAAV,GAAmB,CAAvC,EAA0CF,GAA1C,EAA+C;AAC3CC,8BAAUD,CAAV,EAAaG,KAAb,CAAmBC,iBAAnB,GAAuCL,mBAAmB,EAAnB,GAAwB,GAA/D;AACH;AACJ,aAJD,CAIE,OAAOb,CAAP,EAAU;AACR,uBAAO,sBAAP;AACH;AACD9B,0BAAciD,YAAd,CAA2BC,SAA3B,GAAuCP,gBAAvC;AACH;;;;;;AAGL,IAAItC,sBAAsB,IAAIN,mBAAJ,EAA1B","file":"WorkPhaseController-compiled.js","sourcesContent":["class WorkPhaseController {\r\n     startPomodora() {\r\n        let timerElements = Timer.initializeTimerElements;\r\n        workPhaseView.downloadWorkPhaseComponent(timerElements);\r\n        workPhaseController.subscribeWorkPhaseEvents(timerElements);\r\n        timer.addAnimationToTimerComponents();\r\n        timer.addRunningAnimation(timerElements.timerRotator, timerElements.timerInvader, timerElements.timerDivider);\r\n        let borderColorIndex = timer.receiveColorIndex(timerKey);\r\n        workPhaseView.addBorder(timerElements, borderColorIndex);\r\n    }\r\n\r\n\r\n    finishPomodora() { // break starts\r\n        let timerElements = Timer.initializeTimerElements;\r\n        timer.addPausedAnimation(timerElements.timerRotator, timerElements.timerInvader, timerElements.timerDivider);\r\n        timerElements.pomodoroAttempts[breakTimerAttempts].classList.add('finish-pomodoro');\r\n        breakTimerAttempts++;\r\n        if (breakTimerAttempts === timerAttempts) {\r\n            finishPhaseController.completeTask();\r\n            Timer.clearTimerElements(timerElements.timerContainer, timerElements.breakTimer);\r\n        }\r\n        else {\r\n            try {\r\n                breakPhaseView.startBreak();\r\n            } catch (e) {\r\n                return \"Module is corrupted or switched off\";\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    failPomodora() {\r\n        let timerElements = Timer.initializeTimerElements;\r\n        timer.addPausedAnimation(timerElements.timerRotator, timerElements.timerInvader, timerElements.timerDivider);\r\n        timerElements.pomodoroAttempts[breakTimerAttempts].classList.add('fail-pomodoro');\r\n        breakTimerAttempts++;\r\n\r\n        if (breakTimerAttempts === timerAttempts) {\r\n            finishPhaseController.failTask();\r\n        }\r\n        finishPhaseController.addStartPomodoraBtn();\r\n\r\n        try {\r\n            workPhaseView.removeButtons(timerElements);\r\n        } catch (e) {\r\n            return 'element is already removed'\r\n        }\r\n\r\n    }\r\n\r\n    subscribeWorkPhaseEvents(timerElements) {\r\n        ElementsListener.listenToEvents('click', timerElements.finishPomodoraButton, workPhaseController.finishPomodora);\r\n        ElementsListener.listenToEvents('click', timerElements.failPomodoraButton, workPhaseController.failPomodora);\r\n    }\r\n\r\n\r\n    addWorkAnimationDuration(elem1, elem2, elem3, workTimeDuration) {\r\n        let timerElements = Timer.initializeTimerElements;\r\n        try {\r\n            for (let j = 0; j < arguments.length - 1; j++) {\r\n                arguments[j].style.animationDuration = workTimeDuration * 60 + 's';\r\n            }\r\n        } catch (e) {\r\n            return \"element is undefined\";\r\n        }\r\n        timerElements.timerMinutes.innerHTML = workTimeDuration;\r\n    }\r\n}\r\n\r\nlet workPhaseController = new WorkPhaseController();"]}